--- Python-3.7.0a4/Lib/distutils/command/install.py.lib64~	2018-01-09 04:05:14.000000000 +0100
+++ Python-3.7.0a4/Lib/distutils/command/install.py	2018-01-31 17:56:08.489075136 +0100
@@ -30,14 +30,14 @@ WINDOWS_SCHEME = {
 INSTALL_SCHEMES = {
     'unix_prefix': {
         'purelib': '$base/lib/python$py_version_short/site-packages',
-        'platlib': '$platbase/lib/python$py_version_short/site-packages',
+        'platlib': '$platbase/lib64/python$py_version_short/site-packages',
         'headers': '$base/include/python$py_version_short$abiflags/$dist_name',
         'scripts': '$base/bin',
         'data'   : '$base',
         },
     'unix_home': {
         'purelib': '$base/lib/python',
-        'platlib': '$base/lib/python',
+        'platlib': '$base/lib64/python',
         'headers': '$base/include/python/$dist_name',
         'scripts': '$base/bin',
         'data'   : '$base',
--- Python-3.7.0a4/Lib/distutils/sysconfig.py.lib64~	2018-01-09 04:05:14.000000000 +0100
+++ Python-3.7.0a4/Lib/distutils/sysconfig.py	2018-01-31 17:56:08.490075137 +0100
@@ -129,8 +129,12 @@ def get_python_lib(plat_specific=0, stan
             prefix = plat_specific and EXEC_PREFIX or PREFIX
 
     if os.name == "posix":
+        if plat_specific or standard_lib:
+            lib = "lib64"
+        else:
+            lib = "lib"
         libpython = os.path.join(prefix,
-                                 "lib", "python" + get_python_version())
+                                 lib, "python" + get_python_version())
         if standard_lib:
             return libpython
         else:
--- Python-3.7.0a4/Lib/site.py.lib64~	2018-01-31 17:56:08.490075137 +0100
+++ Python-3.7.0a4/Lib/site.py	2018-01-31 18:25:26.672311191 +0100
@@ -334,11 +334,15 @@ def getsitepackages(prefixes=None):
         seen.add(prefix)
 
         if os.sep == '/':
+            sitepackages.append(os.path.join(prefix, "lib64",
+                                        "python%d.%d" % sys.version_info[:2],
+                                        "site-packages"))
             sitepackages.append(os.path.join(prefix, "lib",
                                         "python%d.%d" % sys.version_info[:2],
                                         "site-packages"))
         else:
             sitepackages.append(prefix)
+            sitepackages.append(os.path.join(prefix, "lib64", "site-packages"))
             sitepackages.append(os.path.join(prefix, "lib", "site-packages"))
         # for framework builds *only* we add the standard Apple locations.
         if sys.platform == "darwin" and sys._framework:
--- Python-3.7.0a4/Lib/sysconfig.py.lib64~	2018-01-09 04:05:14.000000000 +0100
+++ Python-3.7.0a4/Lib/sysconfig.py	2018-01-31 17:56:08.490075137 +0100
@@ -20,10 +20,10 @@ __all__ = [
 
 _INSTALL_SCHEMES = {
     'posix_prefix': {
-        'stdlib': '{installed_base}/lib/python{py_version_short}',
-        'platstdlib': '{platbase}/lib/python{py_version_short}',
+        'stdlib': '{installed_base}/lib64/python{py_version_short}',
+        'platstdlib': '{platbase}/lib64/python{py_version_short}',
         'purelib': '{base}/lib/python{py_version_short}/site-packages',
-        'platlib': '{platbase}/lib/python{py_version_short}/site-packages',
+        'platlib': '{platbase}/lib64/python{py_version_short}/site-packages',
         'include':
             '{installed_base}/include/python{py_version_short}{abiflags}',
         'platinclude':
@@ -62,10 +62,10 @@ _INSTALL_SCHEMES = {
         'data': '{userbase}',
         },
     'posix_user': {
-        'stdlib': '{userbase}/lib/python{py_version_short}',
-        'platstdlib': '{userbase}/lib/python{py_version_short}',
+        'stdlib': '{userbase}/lib64/python{py_version_short}',
+        'platstdlib': '{userbase}/lib64/python{py_version_short}',
         'purelib': '{userbase}/lib/python{py_version_short}/site-packages',
-        'platlib': '{userbase}/lib/python{py_version_short}/site-packages',
+        'platlib': '{userbase}/lib64/python{py_version_short}/site-packages',
         'include': '{userbase}/include/python{py_version_short}',
         'scripts': '{userbase}/bin',
         'data': '{userbase}',
--- Python-3.7.0a4/Lib/test/test_site.py.lib64~	2018-01-31 17:56:08.490075137 +0100
+++ Python-3.7.0a4/Lib/test/test_site.py	2018-01-31 18:25:59.193361917 +0100
@@ -276,7 +276,7 @@ class HelperFunctionsTests(unittest.Test
         elif os.sep == '/':
             # OS X non-framework builds, Linux, FreeBSD, etc
             self.assertEqual(len(dirs), 1)
-            wanted = os.path.join('xoxo', 'lib',
+            wanted = os.path.join('xoxo', 'lib64',
                                   'python%d.%d' % sys.version_info[:2],
                                   'site-packages')
             self.assertEqual(dirs[0], wanted)
--- Python-3.7.0a4/Makefile.pre.in.lib64~	2018-01-09 04:05:14.000000000 +0100
+++ Python-3.7.0a4/Makefile.pre.in	2018-01-31 17:56:08.490075137 +0100
@@ -133,7 +133,7 @@ LIBDIR=		@libdir@
 MANDIR=		@mandir@
 INCLUDEDIR=	@includedir@
 CONFINCLUDEDIR=	$(exec_prefix)/include
-SCRIPTDIR=	$(prefix)/lib
+SCRIPTDIR=	$(prefix)/lib64
 ABIFLAGS=	@ABIFLAGS@
 
 # Detailed destination directories
--- Python-3.7.0a4/Modules/getpath.c.lib64~	2018-01-31 17:56:08.491075138 +0100
+++ Python-3.7.0a4/Modules/getpath.c	2018-01-31 18:27:42.545520551 +0100
@@ -500,7 +500,7 @@ calculate_exec_prefix(const _PyCoreConfi
                 "Could not find platform dependent libraries <exec_prefix>\n");
         }
         wcsncpy(exec_prefix, calculate->exec_prefix, MAXPATHLEN);
-        joinpath(exec_prefix, L"lib/lib-dynload");
+        joinpath(exec_prefix, L"lib64/lib-dynload");
     }
     /* If we found EXEC_PREFIX do *not* reduce it!  (Yet.) */
 }
@@ -742,7 +742,7 @@ calculate_zip_path(PyCalculatePath *calc
     else {
         wcsncpy(calculate->zip_path, calculate->prefix, MAXPATHLEN);
     }
-    joinpath(calculate->zip_path, L"lib/python00.zip");
+    joinpath(calculate->zip_path, L"lib64/python00.zip");
 
     /* Replace "00" with version */
     size_t bufsz = wcslen(calculate->zip_path);
@@ -867,7 +867,7 @@ calculate_init(PyCalculatePath *calculat
     if (!calculate->prefix) {
         return DECODE_LOCALE_ERR("EXEC_PREFIX define", len);
     }
-    calculate->lib_python = Py_DecodeLocale("lib/python" VERSION, &len);
+    calculate->lib_python = Py_DecodeLocale("lib64/python" VERSION, &len);
     if (!calculate->lib_python) {
         return DECODE_LOCALE_ERR("EXEC_PREFIX define", len);
     }
--- Python-3.7.0a4/setup.py.lib64~	2018-01-31 17:56:08.487075134 +0100
+++ Python-3.7.0a4/setup.py	2018-01-31 17:56:08.491075138 +0100
@@ -531,7 +531,7 @@ class PyBuildExt(build_ext):
         # directories (i.e. '.' and 'Include') must be first.  See issue
         # 10520.
         if not cross_compiling:
-            add_dir_to_list(self.compiler.library_dirs, '/usr/local/lib')
+            add_dir_to_list(self.compiler.library_dirs, '/usr/local/lib64')
             add_dir_to_list(self.compiler.include_dirs, '/usr/local/include')
         # only change this for cross builds for 3.3, issues on Mageia
         if cross_compiling:
@@ -830,11 +830,11 @@ class PyBuildExt(build_ext):
             elif curses_library:
                 readline_libs.append(curses_library)
             elif self.compiler.find_library_file(lib_dirs +
-                                                     ['/usr/lib/termcap'],
+                                                     ['/usr/lib64/termcap'],
                                                      'termcap'):
                 readline_libs.append('termcap')
             exts.append( Extension('readline', ['readline.c'],
-                                   library_dirs=['/usr/lib/termcap'],
+                                   library_dirs=['/usr/lib64/termcap'],
                                    extra_link_args=readline_extra_link_args,
                                    libraries=readline_libs) )
         else:
@@ -871,8 +871,8 @@ class PyBuildExt(build_ext):
             if krb5_h:
                 ssl_incs += krb5_h
         ssl_libs = find_library_file(self.compiler, 'ssl',lib_dirs,
-                                     ['/usr/local/ssl/lib',
-                                      '/usr/contrib/ssl/lib/'
+                                     ['/usr/local/ssl/lib64',
+                                      '/usr/contrib/ssl/lib64/'
                                      ] )
 
         if (ssl_incs is not None and
